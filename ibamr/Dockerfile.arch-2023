FROM archlinux:base-20230723.0.166908
MAINTAINER David Wells <drwells@email.unc.edu>

##
## I. Configure pacman
##
RUN                                                                    \
  echo 'Server = http://mirror.cs.vt.edu/pub/ArchLinux/$repo/os/$arch' \
      >/etc/pacman.d/mirrorlist                               &&       \
  echo 'Server = http://mirror.cs.pitt.edu/ArchLinux/$repo/os/$arch'   \
      >>/etc/pacman.d/mirrorlist

##
## II. Build and install dependencies
##
##   A. things from pacman
##
RUN                                                                            \
  pacman --noconfirm -Syu awk bc boost ccache cmake diffutils eigen gcc        \
      fakeroot gcc-fortran grep git hdf5-openmpi lapack lua m4 make mold       \
      muparser netcdf openmpi patch pcre python sed sudo superlu               \
      which wget zlib     &&                                                   \
  pacman --noconfirm -Scc &&                                                   \
  find /var/cache/pacman  -delete

##
##   B. Things from the AUR.
##       1. Start by adding a build user with password pw
##       2. Add everyone in wheel to sudoers
##
##   Obviously this has major security considerations - don't do this
##   outside of docker
##
RUN                                                               \
  useradd --password "$(perl -e 'print crypt('pw', "password")')" \
          --groups users,wheel build                           && \
  mkdir -p /build                                              && \
  chown build:users /build                                     && \
  sed -i 's/# %wheel/%wheel/' /etc/sudoers

##
##       3. install dependencies via AUR - try to avoid openmp in hypre and also
##       downgrade it to prevent a conflict with PETSc 3.19 (fixed in PETSc
##       3.20). Also turn off petsc4py (it doesn't work with cython 3). Delete
##       the PETSc examples (this folder is 55 MB of a total of 1.6 GB and we
##       don't need it)
##
USER build
RUN                                                                         \
  export MAKEFLAGS="-j4"                                                 && \
  cd /build                                                              && \
  for PKG in numdiff gklib metis parmetis-git superlu_dist hypre petsc   ;  \
  do                                                                        \
      wget https://aur.archlinux.org/cgit/aur.git/snapshot/$PKG.tar.gz   && \
      tar xf $PKG.tar.gz                                                 && \
      pushd $PKG                                                         && \
      if [ "$PKG" = "hypre" ] ; then                                        \
        sed -i 's/-fopenmp//g' PKGBUILD                                  && \
        sed -i '/--with-openmp/d' PKGBUILD                               && \
        sed -i 's/pkgver=2....0/pkgver=2.27.0/' PKGBUILD                 && \
        sed -i "s/sha512sums=('.*')/sha512sums=('44a15c4fab2b779bdd22cbab32176dd9563551f538405dc8f48e5c8fee2af21c39b7c4ebc08c663a2e005d09df949a17b529eed74a2a8a6cb398d1eaafab8af8')/" PKGBUILD ; \
      fi                                                                 && \
      if [ "$PKG" = "petsc" ] ; then                                        \
        sed -i "s/'python-numpy'//" PKGBUILD                             && \
        sed -i "s/'cython'//" PKGBUILD                                   && \
        sed -i '/provides.*petsc4py/d' PKGBUILD                          && \
        sed -i 's/petsc4py=1/petsc4py=0/' PKGBUILD                       ;  \
      fi                                                                 && \
      makepkg                                                            && \
      echo "pw" | sudo -S pacman --noconfirm -U $PKG*zst                 && \
      popd                                                               && \
      rm -rf $PKG ;                                                         \
  done                                                                   && \
  echo "pw" | sudo -S rm -rf /opt/petsc/linux-c-opt/share/petsc/examples && \
  cd /                                                                   && \
  echo "pw" | sudo -S rm -rf /build

##
##   C. install SAMRAI (our sole non-standard dependency)
##
USER root
RUN                                                                     \
  mkdir /samrai                                                      && \
  mkdir -p /build/                                                   && \
  cd /build/                                                         && \
  wget https://github.com/LLNL/SAMRAI/archive/refs/tags/2.4.4.tar.gz && \
  tar xf 2.4.4.tar.gz                                                && \
  cd SAMRAI-2.4.4                                                    && \
  wget https://github.com/IBAMR/IBAMR/releases/download/v0.13.0/samrai-2.4.4-patch-ibamr-0.13.0.patch && \
  patch -p1 < samrai-2.4.4-patch-ibamr-0.13.0.patch                  && \
  mkdir build                                                        && \
  cd build                                                           && \
  ../configure                                                          \
      CFLAGS="-O2 -fPIC"                                                \
      CXXFLAGS="-O2 -fPIC"                                              \
      FFLAGS="-O2 -fPIC"                                                \
      --prefix=/samrai                                                  \
      --with-F77=$(which gfortran)                                      \
      --without-hypre                                                   \
      --without-silo                                                    \
      --without-blaslapack                                              \
      --without-cubes                                                   \
      --without-eleven                                                  \
      --without-petsc                                                   \
      --without-sundials                                                \
      --without-x                                                       \
      --without-doxygen                                                 \
      --enable-debug                                                    \
      --with-hdf5=/usr/                                                 \
      --enable-implicit-template-instantiation                          \
      --disable-deprecated                                           && \
  make -j4                                                           && \
  make -j4 install                                                   && \
  cd /                                                               && \
  rm -rf /build/

##
##   D. install IBAMR
##
RUN                                                                       \
  mkdir /ibamr                                                         && \
  mkdir -p /build/                                                     && \
  cd /build/                                                           && \
  wget https://github.com/IBAMR/IBAMR/archive/refs/tags/v0.13.0.tar.gz && \
  tar xf v0.13.0.tar.gz                                                && \
  cd IBAMR-0.13.0                                                      && \
  mkdir build                                                          && \
  cd build                                                             && \
  cmake -DCMAKE_CXX_FLAGS="-O2"                                           \
        -DCMAKE_Fortran_FLAGS="-O2"                                       \
        -DCMAKE_INSTALL_PREFIX=/ibamr                                     \
        -DNUMDIFF_ROOT=/usr/                                              \
        -DPETSC_ROOT=/opt/petsc/linux-c-opt/                              \
        -DSAMRAI_ROOT=/samrai                                             \
        ../                                                            && \
  make -j4 install                                                     && \
  cd /                                                                 && \
  rm -rf /build/
